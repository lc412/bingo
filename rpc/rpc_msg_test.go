package rpc

import (
	"testing"
	"math"
	"fmt"
)

func TestArgs_ToRPCMap(t *testing.T) {
	a := &Args{}
	a.Put("testInt", int(1))
	a.Put("testInt8", int8(2))
	a.Put("testInt16", int16(math.MaxInt16))
	a.Put("testInt32", int32(math.MaxInt32))
	a.Put("testInt64", int64(math.MaxInt64))
	a.Put("testUInt", uint(1))
	a.Put("testUInt8", uint8(math.MaxUint8))
	a.Put("testUInt16", uint16(math.MaxUint16))
	a.Put("testUInt32", uint32(math.MaxUint32))
	a.Put("testUInt64", uint64(math.MaxUint64))
	a.Put("testFloat32", float32(math.MaxFloat32))
	a.Put("testFloat64", float64(math.MaxFloat64))
	a.Put("testString", "test string 测试")
	a.Put("testBool", true)
	a.Put("testInt32Array", []int32{1, 2, 3, math.MaxInt32})
	a.Put("testInt64Array", []int64{1, 2, 3, math.MaxInt64})
	a.Put("testFloat32Array", []float32{1.0, 2.2, 3.4, math.MaxFloat32})
	a.Put("testFloat64Array", []float64{1.0, 2.2, 3.4, math.MaxFloat64})
	a.Put("testStringArray", []string{"test1", "test2", "test3"})
	a.Put("testBoolArray", []bool{false, true, true})

	fmt.Println(a.Get("testInt").GetInt())
	fmt.Println(a.Get("testInt8").GetInt8())
	fmt.Println(a.Get("testInt16").GetInt16())
	fmt.Println(a.Get("testInt32").GetInt32())
	fmt.Println(a.Get("testInt64").GetInt64())
	fmt.Println(a.Get("testUInt").GetUint())
	fmt.Println(a.Get("testUInt8").GetUint8())
	fmt.Println(a.Get("testUInt16").GetUint16())
	fmt.Println(a.Get("testUInt32").GetUint32())
	fmt.Println(a.Get("testUInt64").GetUint64())
	fmt.Println(a.Get("testFloat32").GetFloat32())
	fmt.Println(a.Get("testFloat64").GetFloat64())
	fmt.Println(a.Get("testString").GetString())
	fmt.Println(a.Get("testBool").GetBool())
	fmt.Println(a.Get("testInt32Array").GetInt32Array())
	fmt.Println(a.Get("testInt64Array").GetInt64Array())
	fmt.Println(a.Get("testFloat32Array").GetFloat32Array())
	fmt.Println(a.Get("testFloat64Array").GetFloat64Array())
	fmt.Println(a.Get("testStringArray").GetStringArray())
	fmt.Println(a.Get("testBoolArray").GetBoolArray())
}

func BenchmarkArgs_ToRPCMap(b *testing.B) {
	b.StartTimer()
	a := &Args{}
	a.Put("testInt", int(1))
	a.Put("testInt8", int8(2))
	a.Put("testInt16", int16(math.MaxInt16))
	a.Put("testInt32", int32(math.MaxInt32))
	a.Put("testInt64", int64(math.MaxInt64))
	a.Put("testUInt", uint(1))
	a.Put("testUInt8", uint8(math.MaxUint8))
	a.Put("testUInt16", uint16(math.MaxUint16))
	a.Put("testUInt32", uint32(math.MaxUint32))
	a.Put("testUInt64", uint64(math.MaxUint64))
	a.Put("testFloat32", float32(math.MaxFloat32))
	a.Put("testFloat64", float64(math.MaxFloat64))
	a.Put("testString", "test string 测试")
	a.Put("testBool", true)
	a.Put("testInt32Array", []int32{1, 2, 3, math.MaxInt32})
	a.Put("testInt64Array", []int64{1, 2, 3, math.MaxInt64})
	a.Put("testFloat32Array", []float32{1.0, 2.2, 3.4, math.MaxFloat32})
	a.Put("testFloat64Array", []float64{1.0, 2.2, 3.4, math.MaxFloat64})
	a.Put("testStringArray", []string{"test1", "test2", "test3"})
	a.Put("testBoolArray", []bool{false, true, true})
	a.Put("testByteArray", []byte{127, 1, 2})

	fmt.Println(a.Get("testInt").GetInt())
	fmt.Println(a.Get("testInt8").GetInt8())
	fmt.Println(a.Get("testInt16").GetInt16())
	fmt.Println(a.Get("testInt32").GetInt32())
	fmt.Println(a.Get("testInt64").GetInt64())
	fmt.Println(a.Get("testUInt").GetUint())
	fmt.Println(a.Get("testUInt8").GetUint8())
	fmt.Println(a.Get("testUInt16").GetUint16())
	fmt.Println(a.Get("testUInt32").GetUint32())
	fmt.Println(a.Get("testUInt64").GetUint64())
	fmt.Println(a.Get("testFloat32").GetFloat32())
	fmt.Println(a.Get("testFloat64").GetFloat64())
	fmt.Println(a.Get("testString").GetString())
	fmt.Println(a.Get("testBool").GetBool())
	fmt.Println(a.Get("testInt32Array").GetInt32Array())
	fmt.Println(a.Get("testInt64Array").GetInt64Array())
	fmt.Println(a.Get("testFloat32Array").GetFloat32Array())
	fmt.Println(a.Get("testFloat64Array").GetFloat64Array())
	fmt.Println(a.Get("testStringArray").GetStringArray())
	fmt.Println(a.Get("testBoolArray").GetBoolArray())
	fmt.Println(a.Get("testByteArray").GetByteArray())
	b.StopTimer()
}
